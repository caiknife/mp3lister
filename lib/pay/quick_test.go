package pay

import (
	"encoding/xml"
	"testing"

	"github.com/caiknife/mp3lister/lib/fjson"
)

const (
	quickCheckUserInfoReq = `{"token":"@171@91@163@82@111@88@155@109@102@106@106@159@102@102@102@99@86@96@87@172@159@149@90@114@83@102@103@106@110@104@156@105@97@158@102@147@101@105@107@105@105@89@97@91@169@156@161@152@86@110@106@103@98@83@155@90@107@87@103@108@88@176","product_code":"62204856856038240027246652615411","uid":"11585e21e6c03438","channel_code":"17"}`
)

func TestQuickClient_VerifyUser(t *testing.T) {
	c := NewQuickClient(Pay.Quick.MD5Key, Pay.Quick.CallbackKey)
	req := &QuickCheckUserInfo{}
	err := fjson.UnmarshalFromString(quickCheckUserInfoReq, req)
	if err != nil {
		t.Error(err)
		return
	}
	user := c.VerifyUser(req)
	t.Log(user)
}

const (
	inputXML = `<quicksdk_message>
<message>
<is_test>0</is_test>
<channel>8888</channel>
<channel_uid>231845</channel_uid>
<game_order>123456789</game_order>
<order_no>12520160612114220441168433</order_no>
<pay_time>2016-06-12 11:42:20</pay_time>
<amount>1.00</amount>
<status>0</status>
<extras_params>{1}_{2}</extras_params>
</message>
</quicksdk_message>`
)

func TestNtData_XML(t *testing.T) {
	d := &QuicksdkMessage{}
	t.Log(d.XML())

	err := xml.Unmarshal([]byte(inputXML), d)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(d.XML())
	t.Log(d)
}

const (
	quickCallbackReq = `{"nt_data":"@111@115@170@163@159@84@166@153@167@166@154@167@165@116@86@99@94@97@86@85@154@164@154@161@148@162@162@154@116@85@138@132@121@97@106@88@83@167@164@149@163@151@146@164@166@165@153@111@82@159@163@87@116@116@115@163@165@162@151@158@170@151@160@143@160@153@165@169@148@155@149@114@113@160@150@171@170@152@155@151@110@109@157@168@148@170@156@165@164@119@100@111@102@156@168@143@167@153@165@170@113@112@147@156@150@161@159@157@163@117@102@101@103@103@112@100@152@158@152@160@158@158@160@113@115@150@157@145@161@162@151@162@146@162@145@161@154@113@109@103@154@159@149@160@158@150@160@148@163@151@164@151@110@117@151@155@152@161@163@149@159@147@167@159@151@114@125@120@126@119@104@162@162@126@151@104@168@148@172@110@107@163@142@117@134@109@105@159@172@101@101@101@135@174@105@168@136@157@145@105@162@140@109@103@154@159@149@160@158@150@160@148@170@159@155@112@108@156@156@148@165@161@154@156@146@163@164@154@152@166@110@102@105@99@106@104@109@103@101@132@97@104@101@104@107@111@107@107@97@114@104@107@107@102@101@98@105@112@97@153@155@149@158@162@154@159@144@167@169@155@153@164@110@109@155@150@162@155@150@161@162@157@153@165@117@132@148@101@121@117@102@111@99@106@117@118@120@120@119@108@111@111@120@107@100@114@105@109@107@104@111@107@100@111@117@108@112@119@108@108@98@155@147@163@152@147@159@166@153@152@163@118@115@166@166@150@149@163@147@163@164@116@105@101@103@111@102@99@105@103@101@105@99@106@99@103@104@107@96@105@110@103@99@108@103@105@103@106@99@109@99@164@167@154@156@164@143@167@163@113@115@163@150@169@146@168@155@163@152@114@98@100@103@103@94@104@112@100@100@104@80@98@101@111@106@109@113@98@105@117@99@163@152@172@148@164@156@161@151@116@111@149@157@163@170@161@165@118@109@101@100@98@108@96@149@162@164@171@165@166@110@117@167@167@152@167@170@163@113@100@110@101@166@168@145@168@170@166@111@116@156@175@168@164@145@164@147@165@150@168@152@159@163@119@151@162@164@97@167@145@169@153@160@100@167@149@158@159@99@155@160@166@166@169@98@150@153@146@161@164@163@154@170@98@108@104@153@171@171@165@150@163@146@164@147@168@148@161@163@114@113@98@158@157@170@170@149@153@149@111@112@100@166@171@160@149@155@172@152@158@150@160@154@163@166@149@153@155@113","sign":"@101@101@107@154@102@101@104@154@107@152@147@153@154@155@101@152@101@99@106@108@152@111@156@101@98@158@101@153@105@104@155@100","md5Sign":"e8970b2570e18229c8929016d742a4ad"}`
)

func TestQuickClient(t *testing.T) {
	c := NewQuickClient(Pay.Quick.MD5Key, Pay.Quick.CallbackKey)
	req := &QuickCallbackRequest{}
	err := fjson.UnmarshalFromString(quickCallbackReq, req)
	if err != nil {
		t.Error(err)
		return
	}
	ok := c.VerifyOrder(req)
	t.Log(ok)

	decode, err := c.Decode(req.NTData)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(decode)
}
